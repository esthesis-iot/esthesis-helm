##################################################################################################
# Environments definitions
##################################################################################################
environments:
  default:
    values:
      - devMode: false
  dev:
    values:
      - devMode: true
      - mk8sExposeIngress: true

---
##################################################################################################
# The repositories used by this Helmfile.
##################################################################################################
repositories:
  - name: esthesis
    url: https://esthes.is/helm
  - name: bitnami
    url: registry-1.docker.io/bitnamicharts
    oci: true
  - name: reloader
    url: https://stakater.github.io/stakater-charts
  - name: mongodb
    url: https://mongodb.github.io/helm-charts
  - name: apisix
    url: https://charts.apiseven.com
  - name: camunda
    url: https://helm.camunda.io
  - name: strimzi
    url: https://strimzi.io/charts/
  - name: kafka-ui
    url: https://provectus.github.io/kafka-ui-charts
  - name: joxit
    url: https://helm.joxit.dev

---
##################################################################################################
# Default values
##################################################################################################
helmDefaults:
  timeout: 1800

---
##################################################################################################
# Default state values
##################################################################################################
values:
  ##################################################################################################
  # Global values
  ##################################################################################################
  - esthesisVersion: 3.0.4-SNAPSHOT
  - timezone: {{ env "TIMEZONE" | default "Europe/Athens" }}
  - esthesisSingleNode: {{ env "ESTHESIS_SINGLE_NODE" | default false }}

  ##################################################################################################
  # Accounts to be used throughout charts.
  ##################################################################################################
  - esthesisAdminUsername: {{ env "ESTHESIS_ADMIN_USERNAME" | default "esthesis-admin" }}
  - esthesisAdminPassword: {{ env "ESTHESIS_ADMIN_PASSWORD" | default "esthesis-admin" }}
  - esthesisSystemUsername: {{ env "ESTHESIS_SYSTEM_USERNAME" | default "esthesis-system" }}
  - esthesisSystemPassword: {{ env "ESTHESIS_SYSTEM_PASSWORD" | default "esthesis-system" }}

  ##################################################################################################
  # Chart-specific values.
  ##################################################################################################
  # Keycloak
  - keycloakEnabled: {{ env "KEYCLOAK_ENABLED" | default true }}
  - keycloakIngressHostname: {{ env "KEYCLOAK_INGRESS_HOSTNAME" | default "keycloak.esthesis.localdev" }}
  - keycloakCertManagerClusterIssuer: {{ env "KEYCLOAK_CERT_MANAGER_CLUSTER_ISSUER" | default "" }}
  - keycloakCertManagerIssuer: {{ env "KEYCLOAK_CERT_MANAGER_ISSUER" | default "" }}
  # MongoDB
  - mongoDbEnabled: {{ env "MONGODB_ENABLED" | default true }}
  # APISIX
  - apisixEnabled: {{ env "APISIX_ENABLED" | default true }}
  # REDIS
  - redisEnabled: {{ env "REDIS_ENABLED" | default true }}
  # Kafka
  - kafkaEnabled: {{ env "KAFKA_ENABLED" | default true }}
  # Camunda
  - camundaEnabled: {{ env "CAMUNDA_ENABLED" | default true }}
  # MicroK8s
  - mk8sExposeIngress: {{ env "MK8S_EXPOSE_INGRESS" | default false }}
  - mk8sIngressNamespace: {{ env "MK8S_INGRESS_NAMESPACE" | default "ingress" }}
  # Mosquitto
  - mosquittoEnabled: {{ env "MOSQUITTO_ENABLED" | default true }}
  - mosquittoMutualTls: {{ env "MOSQUITTO_MUTUAL_TLS" | default false }}
  - mosquittoSuperuser: {{ env "MOSQUITTO_SUPERUSER" | default "esthesis" }}
  - mosquittoCaCert: {{ env "MOSQUITTO_CA_CERT" }}
  - mosquittoServerCert: {{ env "MOSQUITTO_SERVER_CERT" }}
  - mosquittoServerKey: {{ env "MOSQUITTO_SERVER_KEY" }}
  - mosquittoServiceType: {{ env "MOSQUITTO_SERVICE_TYPE" | default "ClusterIP" }}
  # Grafana
  - grafanaIngressHostname: {{ env "GRAFANA_INGRESS_HOSTNAME" | default "grafana.esthesis.localdev" }}
  # InfluxDB
  - influxDbEnabled: {{ env "INFLUXDB_ENABLED" | default true }}
  - influxDbIngressHostname: {{ env "INFLUXDB_INGRESS_HOSTNAME" | default "influxdb-ui.esthesis.localdev" }}

---
##################################################################################################
# Release definitions
##################################################################################################
releases:
  - name: esthesis-core-deps
    version: {{ .StateValues.esthesisVersion | quote }}
    chart: "./"
    values:
      - devMode: {{ .StateValues.devMode }}
      - esthesisAdminUsername: {{ .StateValues.esthesisAdminUsername | quote }}
      - esthesisAdminPassword: {{ .StateValues.esthesisAdminPassword | quote }}
      - esthesisSystemUsername: {{ .StateValues.esthesisSystemUsername | quote }}
      - esthesisSystemPassword: {{ .StateValues.esthesisSystemPassword | quote }}
      # Keycloak
      - keycloakEnabled: {{ .StateValues.keycloakEnabled }}
      # MicroK8s
      - mk8sExposeIngress: {{ .StateValues.mk8sExposeIngress }}
      - mk8sIngressNamespace: {{ .StateValues.mk8sIngressNamespace | quote }}
      # Mosquitto
      - mosquittoEnabled: {{ .StateValues.mosquittoEnabled }}
      - mosquittoMutualTls: {{ .StateValues.mosquittoMutualTls }}
      - mosquittoSuperuser: {{ .StateValues.mosquittoSuperuser }}
      - mosquittoCaCert: {{ .StateValues.mosquittoCaCert }}
      - mosquittoServerCert: {{ .StateValues.mosquittoServerCert }}
      - mosquittoServerKey: {{ .StateValues.mosquittoServerKey }}
      - mosquittoServiceType: {{ .StateValues.mosquittoServiceType }}

  - name: reloader
    chart: "reloader/reloader"
    version: "v1.0.22"
    installed: {{ .StateValues.devMode }}

  - name: mongodb
    chart: mongodb/community-operator
    version: "0.9.0"
    installed: {{ .StateValues.mongoDbEnabled }}

  - name: apisix
    chart: apisix/apisix
    version: "1.3.1"
    installed: {{ .StateValues.apisixEnabled }}
    values:
      - apisix:
          timezone: {{ .StateValues.timezone }}
      - plugins:
          - proxy-rewrite
          - openid-connect
          - opentelemetry
      - logs:
          errorLogLevel: "debug"
      - etcd:
          {{- if or .StateValues.devMode .StateValues.esthesisSingleNode }}
          replicaCount: 1
          {{- end }}
          auth:
            token:
              type: "simple"
      - admin:
          credentials:
            admin: {{ .StateValues.esthesisSystemPassword }}
          cors: false
          allow:
            ipList:
              - "0.0.0.0/0"
      - ingress-controller:
          enabled: true
          config:
            logLevel: "warn"
            apisix:
              adminKey: {{ .StateValues.esthesisSystemPassword }}
              serviceFullname: "apisix-admin"
            kubernetes:
              namespaceSelector:
                - kubernetes.io/metadata.name={{ .Namespace }}
      - dashboard:
          enabled: {{ .StateValues.devMode }}
          config:
            authentication:
              secret: {{ .StateValues.esthesisSystemPassword }}
              users:
                - username: {{ .StateValues.esthesisSystemUsername | quote }}
                  password: {{ .StateValues.esthesisSystemPassword | quote }}

  - name: redis
    chart: "bitnami/redis"
    version: "17.3.7"
    installed: {{ .StateValues.redisEnabled }}
    values:
      - architecture: standalone
      - auth:
          password: {{ .StateValues.esthesisSystemPassword }}

  - name: strimzi
    chart: "strimzi/strimzi-kafka-operator"
    version: "0.38.0"
    installed: {{ .StateValues.kafkaEnabled }}
    values:
      - watchAnyNamespace: false

  - name: kafka-ui
    chart: "kafka-ui/kafka-ui"
    version: "0.7.5"
    installed: {{ and .StateValues.kafkaEnabled .StateValues.devMode }}
    values:
      - yamlApplicationConfig:
          kafka:
            clusters:
              - name: kafka
                bootstrapServers: esthesis-core-kafka-kafka-bootstrap:9092
      - auth:
          type: disabled
      - management:
          health:
            ldap:
              enabled: false

  - name: camunda
    chart: "camunda/camunda-platform"
    version: "8.1.5"
    installed: {{ .StateValues.camundaEnabled }}
    values:
      - operate:
          enabled: false
      - optimize:
          enabled: false
      - tasklist:
          enabled: false
      - identity:
          enabled: false
      #          firstUser:
      #            username: {{ .StateValues.esthesisSystemUsername | quote }}
      #            password: {{ .StateValues.esthesisSystemPassword | quote }}
      - web-modeler:
          enabled: false
      {{- if or .StateValues.devMode .StateValues.esthesisSingleNode }}
      - elasticsearch:
          replicas: 1
          minimumMasterNodes: 1
      - zeebe:
          clusterSize: 1
          replicationFactor: 1
      - zeebe-gateway:
          replicas: 1
      {{- end }}

  - name: keycloak
    chart: "bitnami/keycloak"
    version: "15.1.1"
    installed: {{ .StateValues.keycloakEnabled }}
    values:
      - proxy: edge
      - production: true
      - auth:
          adminUser: {{ .StateValues.esthesisSystemUsername | quote }}
          adminPassword: {{ .StateValues.esthesisSystemPassword | quote }}
      - postgresql:
          auth:
            postgresPassword: {{ .StateValues.esthesisSystemPassword | quote }}
            password: {{ .StateValues.esthesisSystemPassword |quote }}
      - readinessProbe:
          timeoutSeconds: 60
      - keycloakConfigCli:
          enabled: true
          existingConfigmap: esthesis-core-keycloak-config
          backoffLimit: 30
          extraEnvVars:
            - name: LOGGING_LEVEL_ROOT
              value: TRACE
            - name: LOGGING_LEVEL_REALMCONFIG
              value: TRACE
          cleanupAfterFinished:
            enabled: true
      {{- if not .StateValues.devMode }}
      - ingress:
          enabled: true
          hostname: {{ .StateValues.keycloakIngressHostname | quote }}
          path: /
          {{- if .StateValues.keycloakCertManagerClusterIssuer }}
          tls: true
          annotations:
            cert-manager.io/cluster-issuer: {{ .StateValues.keycloakCertManagerClusterIssuer | quote }}
          {{- end }}
          {{- if .StateValues.keycloakCertManagerIssuer }}
          tls: true
          annotations:
            cert-manager.io/issuer: {{ .StateValues.keycloakCertManagerIssuer | quote }}
          {{- end }}
      {{- end }}

  - name: grafana-loki
    chart: "bitnami/grafana-loki"
    version: "2.11.16"
    installed: {{ .StateValues.devMode }}
    values:
      - promtail:
          enabled: true
          existingSecret: "grafana-loki-config"

  - name: grafana
    chart: "bitnami/grafana"
    version: "9.6.3"
    installed: {{ .StateValues.devMode }}
    values:
      - admin:
          user: {{ .StateValues.esthesisSystemUsername | quote }}
          password: {{ .StateValues.esthesisSystemPassword | quote }}
      - datasources:
          secretName: grafana-config

  - name: grafana-tempo
    chart: "bitnami/grafana-tempo"
    version: "2.5.7"
    installed: {{ .StateValues.devMode }}
    values:
      - tempo:
          traces:
            jaeger:
              grpc: false
              thriftHttp: false
            otlp:
              http: true  # Needed by APISIX (port 55681)
              grpc: true  # Needed by Quarkus (port 4317)

  - name: influxdb
    chart: bitnami/influxdb
    version: 5.6.1
    installed: {{ .StateValues.influxDbEnabled }}
    values:
      - auth:
          createUserToken: true
          admin:
            username: {{ .StateValues.esthesisSystemUsername }}
            password: {{ .StateValues.esthesisSystemPassword }}
            token: {{ .StateValues.esthesisSystemPassword }}
          user:
            org: esthesis
            bucket: esthesis
            username: {{ .StateValues.esthesisSystemUsername | quote }}
            password: {{ .StateValues.esthesisSystemPassword | quote }}

  - name: docker-registry-ui
    chart: joxit/docker-registry-ui
    version: "1.1.3"
    installed: {{ .StateValues.devMode }}
    values:
      - ui:
          dockerRegistryUrl: "http://registry.container-registry:5000"
          proxy: true
          deleteImages: true
