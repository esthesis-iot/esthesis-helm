##################################################################################################
# Global values
##################################################################################################
devMode: false

domain: ""
esthesisVersion: "3.0.59-SNAPSHOT"
esthesisLocalCharts: false
# oidcRedirectUri: https://<enter_esthesis_domain_here>/callback
oidcRedirectUri: ""
timezone: "Europe/Athens"
imagePullSecret: ""
ingressClassName: ""

# Enable/disable charts
charts_enabled:
  kafka-ui: false
  orion: false
  docker-registry-ui: false
  grafana-tempo: false
  grafana-loki: false
  grafana: false
  ingress-nginx: false

##################################################################################################
# Accounts to be used throughout charts.
# Update the following values with your own.
##################################################################################################
esthesisAdminUsername: esthesis-admin
esthesisAdminPassword: esthesis-admin
esthesisSystemUsername: esthesis-system
esthesisSystemPassword: esthesis-system

##################################################################################################
# Mosquitto Values
##################################################################################################

mosquittoEnabled: true
mosquittoServiceType: LoadBalancer
mosquittoMutualTls: true
mosquittoSuperuser: esthesis
mosquittoCaCert: ""
mosquittoServerCert: ""
mosquittoServerKey: ""

# Redis configuration
redis:
  fullnameOverride: "redis"
  image:
    pullSecrets:
      - name: ""
  architecture: standalone
  auth:
    password: esthesis-system # Update the password with your own.

# MongoDB configuration
mongodb:
  fullnameOverride: "mongodb"
  image:
    pullSecrets:
      - name: ""
    debug: true
  architecture: replicaset
  auth:
    rootPassword: esthesis-system # Update the password with your own.
    replicaSetKey: "ZXN0aGVzaXMtc3lzdGVt" # Base64 encoded string "esthesis-system"
    usernames:
      - "esthesis-system" # Update the username with your own.
    passwords:
      - "esthesis-system" # Update the password with your own.
    databases:
      - "esthesiscore"
  # Update the user esthesis-system with your own
  initdbScripts:
    init-db.js: |
      use esthesiscore
      db.grantRolesToUser("esthesis-system", ["dbAdmin"])

# Kafka configuration
kafka:
  fullnameOverride: "kafka"
  image:
    pullSecrets:
      - name: ""
  provisioning:
    enabled: true
    topics:
      - name: esthesis-command-reply
        partitions: 3
        replicationFactor: 3
      - name: esthesis-telemetry
        partitions: 3
        replicationFactor: 3
      - name: esthesis-metadata
        partitions: 3
        replicationFactor: 3
      - name: esthesis-app-unicast
        partitions: 3
        replicationFactor: 3
      - name: esthesis-app-broadcast
        partitions: 3
        replicationFactor: 3
      - name: esthesis-ping
        partitions: 3
        replicationFactor: 3
      - name: esthesis-command-request
        partitions: 3
        replicationFactor: 3
  kraft:
    clusterId: "M3Q1ZTNlMWFhMTgyNDhiZj"
  sasl:
    interbroker:
      password: "esthesis-system" # Update the password with your own.
    controller:
      password: "esthesis-system" # Update the password with your own.
    client:
      users:
        - "esthesis-system" # Update the username with your own.
      passwords:
        - "esthesis-system" # Update the password with your own.
  extraConfig: |
    offsets.topic.replication.factor=3
    transaction.state.log.replication.factor=3

# Keycloak configuration
keycloak:
  fullnameOverride: "keycloak"
  global:
    imagePullSecrets: []
  proxyHeaders: xforwarded
  production: true
  auth:
    adminUser: esthesis-system # Update the username with your own.
    adminPassword: esthesis-system # Update the password with your own.
  postgresql:
    fullnameOverride: "postgresql"
    auth:
      postgresPassword: "esthesis-system" # Update the password with your own.
      password: "esthesis-system" # Update the password with your own.
  readinessProbe:
    timeoutSeconds: 60
  ingress:
    enabled: true
    hostname: keycloak.esthesis
    path: /
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
  extraEnvVars:
    # Allow admin service to be port-forwarded to localhost.
    - name: KC_HOSTNAME
      value: https://keycloak.esthesis/
    - name: KC_HOSTNAME_ADMIN
      value: https://keycloak.esthesis/

# Camunda configuration
camunda-platform:
  global:
    zeebeClusterName: "zeebe"
    image:
      pullSecrets:
        - name: ""
    identity:
      keycloak:
        url:
          protocol: "http"
          host: "keycloak-headless.<enter_your_namespace_here>.svc.cluster.local"
          port: "8080"
      auth:
        enabled: false
  operate:
    enabled: false
  optimize:
    enabled: false
  tasklist:
    enabled: false
  identity:
    enabled: false
  identityKeycloak:
    enabled: false
  webModeler:
    enabled: false
  connectors:
    enabled: false
  zeebe:
    enabled: true
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
  zeebeGateway:
    enabled: true
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
  elasticsearch:
    fullnameOverride: "elasticsearch"
    enabled: true
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"

# InfluxDB configuration
influxdb:
  fullnameOverride: "influxdb"
  global:
    imagePullSecrets: []
  auth:
    admin:
      username: esthesis-system # Update the username with your own.
      password: esthesis-system # Update the password with your own.
    user:
      org: esthesis
      bucket: esthesis
      username: esthesis-system # Update the username with your own.
      password: esthesis-system # Update the password with your own.
  persistence:
    size: "32Gi"

# Grafana configuration
grafana:
  fullnameOverride: "grafana"
  global:
    imagePullSecrets: []
  admin:
    user: esthesis-system # Update the username with your own.
    password: esthesis-system # Update the password with your own.

# Kafka UI configuration
kafka-ui:
  fullnameOverride: "kafka-ui"
  imagePullSecrets: []
  yamlApplicationConfig:
    kafka:
      clusters:
        - name: kafka
          bootstrapServers: "kafka.default.svc.cluster.local:9092"
          properties:
            security.protocol: SASL_PLAINTEXT
            sasl.mechanism: PLAIN
            # Update the esthesis-system username and password with your own.
            sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=esthesis-system password=esthesis-system;"

# Grafana Loki configuration
grafana-loki:
  fullnameOverride: "grafana-loki"
  global:
    imagePullSecrets: []
  promtail:
    enabled: true

# Ingress nginx configuration
ingress-nginx:
  fullnameOverride: "ingress-nginx"
  controller:
    scope:
      enabled: false
      namespace: default
    service:
      externalIPs:
        - "192.168.1.1" # Replace with actual LoadBalancer IP if needed
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "*.esthesis"
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    ingressClassResource:
      name: "nginx-default"

# Docker Registry UI configuration
docker-registry-ui:
  fullnameOverride: "docker-registry-ui"
  global:
    name: docker-registry
    imagePullSecrets: []
  ui:
    proxy: true
    deleteImages: true
  registry:
    enabled: true
    service:
      type: NodePort
      nodePort: ""

# Grafana Tempo configuration
grafana-tempo:
  fullnameOverride: "grafana-tempo"
  global:
    imagePullSecrets: []
  tempo:
    traces:
      jaeger:
        grpc: false
        thriftHttp: false
      otlp:
        grpc: true # Needed by Quarkus (port 4317)
