##################################################################################################
# Environments definitions
##################################################################################################
environments:
  default:
    values:
      - devMode: false
      - helmfileDevMode: {{ env "HELMFILE_DEV_MODE" | default false }}
  dev:
    values:
      - devMode: true
      - helmfileDevMode: {{ env "HELMFILE_DEV_MODE" | default true }}
      - mk8sExposeIngress: true

---
##################################################################################################
# The repositories used by this Helmfile.
##################################################################################################
repositories:
  - name: esthesis
    url: https://esthes.is/helm
  - name: bitnami
    url: registry-1.docker.io/bitnamicharts
    oci: true
  - name: reloader
    url: https://stakater.github.io/stakater-charts
  - name: mongodb
    url: https://mongodb.github.io/helm-charts
  - name: apisix
    url: https://charts.apiseven.com
  - name: camunda
    url: https://helm.camunda.io
  - name: twuni
    url: https://helm.twun.io
  - name: harbor
    url: https://helm.goharbor.io

---
##################################################################################################
# Default values
##################################################################################################
helmDefaults:
  timeout: 1800

---
##################################################################################################
# Default state values
##################################################################################################
values:
  ##################################################################################################
  # Global values
  ##################################################################################################
  - esthesisVersion: 3.0.2-SNAPSHOT
  - timezone: {{ env "TIMEZONE" | default "Europe/Athens" }}
  - esthesisApiIngressHostname: {{ env "ESTHESIS_API_INGRESS_HOSTNAME" | default "apisix-gateway.esthesis.localdev" }}
  - esthesisSingleNode: {{ env "ESTHESIS_SINGLE_NODE" | default false }}

  ##################################################################################################
  # Accounts to be used throughout charts.
  ##################################################################################################
  - esthesisAdminUsername: {{ env "ESTHESIS_ADMIN_USERNAME" | default "esthesis-admin" }}
  - esthesisAdminPassword: {{ env "ESTHESIS_ADMIN_PASSWORD" | default "esthesis-admin" }}
  - esthesisSystemUsername: {{ env "ESTHESIS_SYSTEM_USERNAME" | default "esthesis-system" }}
  - esthesisSystemPassword: {{ env "ESTHESIS_SYSTEM_PASSWORD" | default "esthesis-system" }}

  ##################################################################################################
  # Chart-specific values.
  ##################################################################################################
  # Keycloak
  - keycloakEnabled: {{ env "KEYCLOAK_ENABLED" | default true }}
  - keycloakIngressHostname: {{ env "KEYCLOAK_INGRESS_HOSTNAME" | default "keycloak.esthesis.localdev" }}
  # MongoDB
  - mongoDbEnabled: {{ env "MONGODB_ENABLED" | default true }}
  # APISIX
  - apisixEnabled: {{ env "APISIX_ENABLED" | default true }}
  # REDIS
  - redisEnabled: {{ env "REDIS_ENABLED" | default true }}
  # Kafka
  - kafkaEnabled: {{ env "KAFKA_ENABLED" | default true }}
  # Camunda
  - camundaEnabled: {{ env "CAMUNDA_ENABLED" | default true }}
  # MicroK8s
  - mk8sExposeIngress: {{ env "MK8S_EXPOSE_INGRESS" | default false }}
  - mk8sIngressNamespace: {{ env "MK8S_INGRESS_NAMESPACE" | default "ingress" }}
  # Mosquitto
  - mosquittoEnabled: {{ env "MOSQUITTO_ENABLED" | default true }}
  - mosquittoMutualTls: {{ env "MOSQUITTO_MUTUAL_TLS" | default false }}
  - mosquittoSuperuser: {{ env "MOSQUITTO_SUPERUSER" }}
  - mosquittoCaCert: {{ env "MOSQUITTO_CA_CERT" }}
  - mosquittoServerCert: {{ env "MOSQUITTO_SERVER_CERT" }}
  - mosquittoServerKey: {{ env "MOSQUITTO_SERVER_KEY" }}
  # Grafana
  - grafanaIngressHostname: {{ env "GRAFANA_INGRESS_HOSTNAME" | default "grafana.esthesis.localdev" }}
  # InfluxDB
  - influxDbEnabled: {{ env "INFLUXDB_ENABLED" | default true }}
  - influxDbIngressHostname: {{ env "INFLUXDB_INGRESS_HOSTNAME" | default "influxdb-ui.esthesis.localdev" }}
  # Harbor
  - harborIngressHostname:  {{ env "HARBOR_INGRESS_HOSTNAME" | default "registry.esthesis.localdev" }}

---
##################################################################################################
# Release definitions
##################################################################################################
releases:
  - name: esthesis-core-deps
    version: {{ .StateValues.esthesisVersion | quote }}
    chart: {{ .StateValues.helmfileDevMode | ternary "./" "esthesis/esthesis-core-deps" | quote }}
    values:
      - devMode: {{ .StateValues.devMode }}
      - esthesisAdminUsername: {{ .StateValues.esthesisAdminUsername | quote }}
      - esthesisAdminPassword: {{ .StateValues.esthesisAdminPassword | quote }}
      - esthesisSystemUsername: {{ .StateValues.esthesisSystemUsername | quote }}
      - esthesisSystemPassword: {{ .StateValues.esthesisSystemPassword | quote }}
      # Keycloak
      - keycloakEnabled: {{ .StateValues.keycloakEnabled }}
      # MicroK8s
      - mk8sExposeIngress: {{ .StateValues.mk8sExposeIngress }}
      - mk8sIngressNamespace: {{ .StateValues.mk8sIngressNamespace | quote }}
      # Mosquitto
      - mosquittoEnabled: {{ .StateValues.mosquittoEnabled }}
      - mosquittoMutualTls: {{ .StateValues.mosquittoMutualTls }}
      - mosquittoSuperuser: {{ .StateValues.mosquittoSuperuser }}
      - mosquittoCaCert: {{ .StateValues.mosquittoCaCert }}
      - mosquittoServerCert: {{ .StateValues.mosquittoServerCert }}
      - mosquittoServerKey: {{ .StateValues.mosquittoServerKey }}

  - name: reloader
    chart: "reloader/reloader"
    version: "v1.0.22"
    installed: {{ .StateValues.devMode }}

  - name: harbor
    chart: "harbor/harbor"
    version: "1.13.0"
    installed: {{ .StateValues.devMode }}
    values:
      - harborAdminPassword: {{ .StateValues.esthesisSystemPassword }}
      - externalURL: "http://{{ .StateValues.harborIngressHostname }}"
      - expose:
          tls:
            enabled: false
          ingress:
            hosts:
              core: {{ .StateValues.harborIngressHostname | quote }}
      - trivy:
          enabled: false

  - name: mongodb
    chart: mongodb/community-operator
    version: "0.7.9"
    installed: {{ .StateValues.mongoDbEnabled }}

  - name: apisix
    chart: apisix/apisix
    version: "1.3.1"
    installed: {{ .StateValues.apisixEnabled }}
    values:
      - apisix:
          timezone: {{ .StateValues.timezone }}
      - plugins:
          - proxy-rewrite
          - openid-connect
          - opentelemetry
      - logs:
          errorLogLevel: "debug"
      - etcd:
          {{- if or .StateValues.devMode .StateValues.esthesisSingleNode }}
          replicaCount: 1
          {{- end }}
          auth:
            token:
              type: "simple"
      - gateway:
          ingress:
            enabled: true
            hosts:
              - host: {{ .StateValues.esthesisApiIngressHostname }}
                paths:
                  - /api
      - admin:
          credentials:
            admin: {{ .StateValues.esthesisSystemPassword }}
          cors: false
          allow:
            ipList:
              - "0.0.0.0/0"
      - ingress-controller:
          enabled: true
          config:
            logLevel: "warn"
            apisix:
              adminKey: {{ .StateValues.esthesisSystemPassword }}
              serviceFullname: "apisix-admin"
            kubernetes:
              namespaceSelector:
                - ""
      - dashboard:
          enabled: {{ .StateValues.devMode }}
          ingress:
            enabled: true
            hosts:
              - host: apisix-dashboard.esthesis.localdev
                paths:
                  - /
          config:
            authentication:
              secret: {{ .StateValues.esthesisSystemPassword }}
              users:
                - username: {{ .StateValues.esthesisSystemUsername | quote }}
                  password: {{ .StateValues.esthesisSystemPassword | quote }}

  - name: redis
    chart: "bitnami/redis"
    version: "17.3.7"
    installed: {{ .StateValues.redisEnabled }}
    values:
      - architecture: standalone
      - auth:
          password: {{ .StateValues.esthesisSystemPassword }}
      {{- if .StateValues.devMode }}
      - master:
          service:
            type: LoadBalancer
      {{- end }}

  - name: kafka
    chart: "bitnami/kafka"
    version: "22.1.1"
    installed: {{ .StateValues.kafkaEnabled }}
    {{- if .StateValues.devMode }}
    values:
      - externalAccess:
          enabled: true
          autoDiscovery:
            enabled: true
          service:
            type: LoadBalancer
      - serviceAccount:
          create: true
      - rbac:
          create: true
      - deleteTopicEnable: true
    {{- end }}

  - name: camunda
    chart: "camunda/camunda-platform"
    version: "8.1.5"
    installed: {{ .StateValues.camundaEnabled }}
    values:
      - operate:
          enabled: false
      - optimize:
          enabled: false
      - tasklist:
          enabled: false
      - identity:
          enabled: false
      #          firstUser:
      #            username: {{ .StateValues.esthesisSystemUsername | quote }}
      #            password: {{ .StateValues.esthesisSystemPassword | quote }}
      - web-modeler:
          enabled: false
      {{- if or .StateValues.devMode .StateValues.esthesisSingleNode }}
      - elasticsearch:
          replicas: 1
          minimumMasterNodes: 1
      - zeebe:
          clusterSize: 1
          replicationFactor: 1
      - zeebe-gateway:
          replicas: 1
          service:
            type: LoadBalancer
      {{- end }}

  - name: keycloak
    chart: "bitnami/keycloak"
    version: "15.1.1"
    installed: {{ .StateValues.keycloakEnabled }}
    values:
      - proxy: "edge"
      - production: true
      - auth:
          adminUser: {{ .StateValues.esthesisSystemUsername | quote }}
          adminPassword: {{ .StateValues.esthesisSystemPassword | quote }}
      - postgresql:
          auth:
            postgresPassword: {{ .StateValues.esthesisSystemPassword }}
            password: {{ .StateValues.esthesisSystemPassword }}
      - readinessProbe:
          timeoutSeconds: 60
      - keycloakConfigCli:
          enabled: true
          existingConfigmap: esthesis-core-keycloak-config
          backoffLimit: 30
          command: "[\"java\", \"-jar\", \"/opt/bitnami/keycloak-config-cli/keycloak-config-cli.jar\"]"
      - ingress:
          enabled: true
          hostname: {{ .StateValues.keycloakIngressHostname | quote }}
          path: /

  - name: grafana-loki
    chart: "bitnami/grafana-loki"
    version: "2.8.1"
    installed: {{ .StateValues.devMode }}
    values:
      - promtail:
          enabled: true
          existingSecret: "grafana-loki-config"

  - name: grafana
    chart: "bitnami/grafana"
    version: "8.4.2"
    installed: {{ .StateValues.devMode }}
    values:
      - admin:
          user: {{ .StateValues.esthesisSystemUsername | quote }}
          password: {{ .StateValues.esthesisSystemPassword | quote }}
      - datasources:
          secretName: grafana-config
      - ingress:
          enabled: true
          hostname: {{ .StateValues.grafanaIngressHostname | quote }}
          path: /

  - name: grafana-tempo
    chart: "bitnami/grafana-tempo"
    version: "2.2.2"
    installed: {{ .StateValues.devMode }}
    values:
      - distributor:
          service:
            type: LoadBalancer
      - tempo:
          traces:
            jaeger:
              grpc: false
              thriftHttp: false
            otlp:
              http: true  # Needed by APISIX
              grpc: true  # Needed by Quarkus

  - name: influxdb
    chart: bitnami/influxdb
    version: 5.6.1
    installed: {{ .StateValues.influxDbEnabled }}
    values:
      - auth:
          createUserToken: true
          admin:
            username: {{ .StateValues.esthesisSystemUsername }}
            password: {{ .StateValues.esthesisSystemPassword }}
            token: {{ .StateValues.esthesisSystemPassword }}
          user:
            org: esthesis
            bucket: esthesis
            username: {{ .StateValues.esthesisSystemUsername | quote }}
            password: {{ .StateValues.esthesisSystemPassword | quote }}
      {{- if .StateValues.devMode }}
      - influxdb:
          service:
            type: LoadBalancer
      - ingress:
          enabled: true
          hostname: {{ .StateValues.influxDbIngressHostname | quote }}
          path: /
      {{- end }}
