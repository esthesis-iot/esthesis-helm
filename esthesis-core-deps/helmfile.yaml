##################################################################################################
# Environments definitions
##################################################################################################
environments:
  default:
    values:
      - devMode: false
  dev:
    values:
      - devMode: true
      - keycloakIngressName: "keycloak.esthesis"

---
##################################################################################################
# The repositories used by this Helmfile.
##################################################################################################
repositories:
  - name: esthesis
    url: https://esthes.is/helm
  - name: bitnami
    url: registry-1.docker.io/bitnamicharts
    oci: true
  - name: reloader
    url: https://stakater.github.io/stakater-charts
  - name: camunda
    url: https://helm.camunda.io
  - name: kafka-ui
    url: https://provectus.github.io/kafka-ui-charts
  - name: joxit
    url: https://helm.joxit.dev

---
##################################################################################################
# Default values
##################################################################################################
helmDefaults:
  timeout: 1800

---
##################################################################################################
# Default state values
##################################################################################################
values:
  ##################################################################################################
  # Global values
  ##################################################################################################
  - esthesisVersion: 3.0.5-SNAPSHOT
  - timezone: {{ env "TIMEZONE" | default "Europe/Athens" }}

  ##################################################################################################
  # Accounts to be used throughout charts.
  ##################################################################################################
  - esthesisAdminUsername: {{ env "ESTHESIS_ADMIN_USERNAME" | default "esthesis-admin" }}
  - esthesisAdminPassword: {{ env "ESTHESIS_ADMIN_PASSWORD" | default "esthesis-admin" }}
  - esthesisSystemUsername: {{ env "ESTHESIS_SYSTEM_USERNAME" | default "esthesis-system" }}
  - esthesisSystemPassword: {{ env "ESTHESIS_SYSTEM_PASSWORD" | default "esthesis-system" }}

  ##################################################################################################
  # Chart-specific values.
  ##################################################################################################
  # Keycloak
  - keycloakEnabled: {{ env "KEYCLOAK_ENABLED" | default true }}
  - keycloakIngressName: {{ env "KEYCLOAK_INGRESS_NAME" }}
  - keycloakCertManagerClusterIssuer: {{ env "KEYCLOAK_CERT_MANAGER_CLUSTER_ISSUER" }}
  - keycloakCertManagerIssuer: {{ env "KEYCLOAK_CERT_MANAGER_ISSUER" }}
  # MongoDB
  - mongoDbEnabled: {{ env "MONGODB_ENABLED" | default true }}
  # REDIS
  - redisEnabled: {{ env "REDIS_ENABLED" | default true }}
  # Kafka
  - kafkaEnabled: {{ env "KAFKA_ENABLED" | default true }}
  - kafkaTopicReplicas: {{ env "KAFKA_TOPIC_REPLICAS" | default 3 }}
  - kafkaTopicPartitions: {{ env "KAFKA_TOPIC_PARTITIONS" | default 3 }}
  # Camunda
  - camundaEnabled: {{ env "CAMUNDA_ENABLED" | default true }}
  # Mosquitto
  - mosquittoEnabled: {{ env "MOSQUITTO_ENABLED" | default true }}
  - mosquittoMutualTls: {{ env "MOSQUITTO_MUTUAL_TLS" | default false }}
  - mosquittoSuperuser: {{ env "MOSQUITTO_SUPERUSER" | default "esthesis" }}
  - mosquittoCaCert: {{ env "MOSQUITTO_CA_CERT" }}
  - mosquittoServerCert: {{ env "MOSQUITTO_SERVER_CERT" }}
  - mosquittoServerKey: {{ env "MOSQUITTO_SERVER_KEY" }}
  - mosquittoServiceType: {{ env "MOSQUITTO_SERVICE_TYPE" | default "ClusterIP" }}
  # InfluxDB
  - influxDbEnabled: {{ env "INFLUXDB_ENABLED" | default true }}

---
##################################################################################################
# Release definitions
##################################################################################################
releases:
  - name: esthesis-core-deps
    version: {{ .StateValues.esthesisVersion | quote }}
    chart: "./"
    values:
      - devMode: {{ .StateValues.devMode }}
      - esthesisAdminUsername: {{ .StateValues.esthesisAdminUsername | quote }}
      - esthesisAdminPassword: {{ .StateValues.esthesisAdminPassword | quote }}
      - esthesisSystemUsername: {{ .StateValues.esthesisSystemUsername | quote }}
      - esthesisSystemPassword: {{ .StateValues.esthesisSystemPassword | quote }}
      # Keycloak
      - keycloakEnabled: {{ .StateValues.keycloakEnabled }}
      # Mosquitto
      - mosquittoEnabled: {{ .StateValues.mosquittoEnabled }}
      - mosquittoMutualTls: {{ .StateValues.mosquittoMutualTls }}
      - mosquittoSuperuser: {{ .StateValues.mosquittoSuperuser }}
      - mosquittoCaCert: {{ .StateValues.mosquittoCaCert }}
      - mosquittoServerCert: {{ .StateValues.mosquittoServerCert }}
      - mosquittoServerKey: {{ .StateValues.mosquittoServerKey }}
      - mosquittoServiceType: {{ .StateValues.mosquittoServiceType }}

  - name: reloader
    chart: "reloader/reloader"
    version: "v1.0.22"
    installed: {{ .StateValues.devMode }}

  - name: redis
    chart: bitnami/redis
    version: "17.3.7"
    installed: {{ .StateValues.redisEnabled }}
    values:
      - architecture: standalone
      - auth:
          password: {{ .StateValues.esthesisSystemPassword }}

  - name: mongodb
    chart: bitnami/mongodb
    version: "14.5.1"
    installed: {{ .StateValues.mongoDbEnabled }}
    values:
      - architecture: replicaset
      - auth:
          rootPassword: {{ .StateValues.esthesisSystemPassword }}
          replicaSetKey: {{ .StateValues.esthesisSystemPassword | b64enc | quote}}
          usernames:
            - {{ .StateValues.esthesisSystemUsername | quote }}
          passwords:
            - {{ .StateValues.esthesisSystemPassword | quote }}
          databases:
            - "esthesiscore"
      - initdbScripts:
          init-db.js: |
            use esthesiscore
            db.grantRolesToUser('{{ .StateValues.esthesisSystemUsername }}', ["dbAdmin"])
       {{- if .StateValues.devMode }}
      - replicaCount: 1
      {{- end }}

  - name: mariadb
    chart: bitnami/mariadb
    version: "15.1.2"
    installed: {{ .StateValues.mongoDbEnabled }}
    values:
      - auth:
          rootPassword: {{ .StateValues.esthesisSystemPassword }}
          username: {{ .StateValues.esthesisSystemUsername | quote }}
          password: {{ .StateValues.esthesisSystemPassword | quote }}
          database: "esthesiscore"

  - name: kafka
    chart: bitnami/kafka
    version: "26.6.2"
    installed: {{ .StateValues.kafkaEnabled }}
    values:
      {{- if .StateValues.devMode }}
      - controller:
          replicaCount: 1
      {{- end }}
      - sasl:
          client:
            users:
              - {{ .StateValues.esthesisSystemUsername | quote }}
            passwords:
              - {{ .StateValues.esthesisSystemPassword | quote }}
      - provisioning:
          enabled: true
          topics:
            - name: esthesis-command-reply
              partitions: {{ .StateValues.kafkaTopicPartitions }}
              {{- if .StateValues.devMode }}
              replicationFactor: 1
              {{- else }}
              replicationFactor: {{ .StateValues.kafkaTopicReplicas }}
              {{- end }}
            - name: esthesis-telemetry
              partitions: {{ .StateValues.kafkaTopicPartitions }}
              {{- if .StateValues.devMode }}
              replicationFactor: 1
              {{- else }}
              replicationFactor: {{ .StateValues.kafkaTopicReplicas }}
              {{- end }}
            - name: esthesis-metadata
              partitions: {{ .StateValues.kafkaTopicPartitions }}
              {{- if .StateValues.devMode }}
              replicationFactor: 1
              {{- else }}
              replicationFactor: {{ .StateValues.kafkaTopicReplicas }}
              {{- end }}
            - name: esthesis-app
              partitions: {{ .StateValues.kafkaTopicPartitions }}
              {{- if .StateValues.devMode }}
              replicationFactor: 1
              {{- else }}
              replicationFactor: {{ .StateValues.kafkaTopicReplicas }}
              {{- end }}
            - name: esthesis-ping
              partitions: {{ .StateValues.kafkaTopicPartitions }}
              {{- if .StateValues.devMode }}
              replicationFactor: 1
              {{- else }}
              replicationFactor: {{ .StateValues.kafkaTopicReplicas }}
              {{- end }}
            - name: esthesis-command-request
              partitions: {{ .StateValues.kafkaTopicPartitions }}
              {{- if .StateValues.devMode }}
              replicationFactor: 1
              {{- else }}
              replicationFactor: {{ .StateValues.kafkaTopicReplicas }}
              {{- end }}

  - name: kafka-ui
    chart: "kafka-ui/kafka-ui"
    version: "0.7.5"
    installed: {{ and .StateValues.kafkaEnabled .StateValues.devMode }}
    values:
      - yamlApplicationConfig:
          kafka:
            clusters:
              - name: kafka
                bootstrapServers: "kafka.{{ .Namespace }}.svc.cluster.local:9092"
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username={{ .StateValues.esthesisSystemUsername }} password={{ .StateValues.esthesisSystemPassword }};"
      - management:
          health:
            ldap:
              enabled: false

  - name: camunda
    chart: "camunda/camunda-platform"
    version: "8.1.5"
    installed: {{ .StateValues.camundaEnabled }}
    values:
      - operate:
          enabled: false
      - optimize:
          enabled: false
      - tasklist:
          enabled: false
      - identity:
          enabled: false
      - web-modeler:
          enabled: false
      {{- if .StateValues.devMode }}
      - elasticsearch:
          replicas: 1
          minimumMasterNodes: 1
      - zeebe:
          clusterSize: 1
          replicationFactor: 1
      - zeebe-gateway:
          replicas: 1
      {{- end }}

  - name: keycloak
    chart: bitnami/keycloak
    version: "15.1.1"
    installed: {{ .StateValues.keycloakEnabled }}
    values:
      - proxy: edge
      - production: true
      - auth:
          adminUser: {{ .StateValues.esthesisSystemUsername | quote }}
          adminPassword: {{ .StateValues.esthesisSystemPassword | quote }}
      - postgresql:
          auth:
            postgresPassword: {{ .StateValues.esthesisSystemPassword | quote }}
            password: {{ .StateValues.esthesisSystemPassword |quote }}
      - readinessProbe:
          timeoutSeconds: 60
      - keycloakConfigCli:
          enabled: true
          existingConfigmap: esthesis-core-keycloak-config
          backoffLimit: 30
          extraEnvVars:
            - name: LOGGING_LEVEL_ROOT
              value: TRACE
            - name: LOGGING_LEVEL_REALMCONFIG
              value: TRACE
          cleanupAfterFinished:
            enabled: true
      {{- if not .StateValues.devMode }}
      - ingress:
          enabled: true
          hostname: {{ .StateValues.keycloakIngressName | quote }}
          path: /
          {{- if .StateValues.keycloakCertManagerClusterIssuer }}
          tls: true
          annotations:
            cert-manager.io/cluster-issuer: {{ .StateValues.keycloakCertManagerClusterIssuer | quote }}
          {{- end }}
          {{- if .StateValues.keycloakCertManagerIssuer }}
          tls: true
          annotations:
            cert-manager.io/issuer: {{ .StateValues.keycloakCertManagerIssuer | quote }}
          {{- end }}
      {{- end }}

  - name: grafana-loki
    chart: bitnami/grafana-loki
    version: "2.11.16"
    installed: {{ .StateValues.devMode }}
    values:
      - promtail:
          enabled: true
          existingSecret: "grafana-loki-config"

  - name: grafana
    chart: bitnami/grafana
    version: "9.6.3"
    installed: {{ .StateValues.devMode }}
    values:
      - admin:
          user: {{ .StateValues.esthesisSystemUsername | quote }}
          password: {{ .StateValues.esthesisSystemPassword | quote }}
      - datasources:
          secretName: grafana-config

  - name: grafana-tempo
    chart: bitnami/grafana-tempo
    version: "2.5.7"
    installed: {{ .StateValues.devMode }}
    values:
      - tempo:
          traces:
            jaeger:
              grpc: false
              thriftHttp: false
            otlp:
              grpc: true  # Needed by Quarkus (port 4317)

  - name: influxdb
    chart: bitnami/influxdb
    version: 5.6.1
    installed: {{ .StateValues.influxDbEnabled }}
    values:
      - auth:
          createUserToken: true
          admin:
            username: {{ .StateValues.esthesisSystemUsername }}
            password: {{ .StateValues.esthesisSystemPassword }}
            token: {{ .StateValues.esthesisSystemPassword }}
          user:
            org: esthesis
            bucket: esthesis
            username: {{ .StateValues.esthesisSystemUsername | quote }}
            password: {{ .StateValues.esthesisSystemPassword | quote }}

  - name: docker-registry-ui
    chart: joxit/docker-registry-ui
    version: "1.1.3"
    installed: {{ .StateValues.devMode }}
    values:
      - ui:
          dockerRegistryUrl: "http://registry.container-registry:5000"
          proxy: true
          deleteImages: true
