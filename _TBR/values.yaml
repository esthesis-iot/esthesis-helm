global:
  devEnv:
    enabled: false

  oidcDiscoveryUrl: nassos
  abc: &abc takis
  def: &def takis
  releaseName: &releaseName esthesis-core
  initdbScriptsConfigMap: "esthesis-core-mongodb-init-cm"


esthesis:
  version: "3.0.0-SNAPSHOT"
  auth:
    adminUsername: esthesis-admin
    adminPassword: esthesis
    systemUsername: esthesis-system
    systemPassword: esthesis
    thirdParty:
      adminUsername: esthesis-admin
      adminPassword: esthesis
  ui:
    ingress:
      hostname: ui.esthesis.local

apisix:
  enabled: true
  etcd:
    replicaCount: 1
    auth:
      token:
        type: simple
  admin:
    credentials:
      admin: esthesis-admin
      viewer: esthesis-viewer
    cors: false
    allow:
      ipList:
        - 0.0.0.0/0
  plugins:
    - opentelemetry
    - api-breaker
    - authz-keycloak
    - basic-auth
    - batch-requests
    - consumer-restriction
    - cors
    - echo
    - fault-injection
    - grpc-transcode
    - hmac-auth
    - http-logger
    - ip-restriction
    - ua-restriction
    - jwt-auth
    - kafka-logger
    - key-auth
    - limit-conn
    - limit-count
    - limit-req
    - node-status
    - openid-connect
    - authz-casbin
    - prometheus
    - proxy-cache
    - proxy-mirror
    - proxy-rewrite
    - redirect
    - referer-restriction
    - request-id
    - request-validation
    - response-rewrite
    - serverless-post-function
    - serverless-pre-function
    - sls-logger
    - syslog
    - tcp-logger
    - udp-logger
    - uri-blocker
    - wolf-rbac
    - zipkin
    - traffic-split
    - gzip
    - real-ip
    - ext-plugin-pre-req
    - ext-plugin-post-req
    - server-info
  ingress-controller:
    enabled: true
    config:
      logLevel: warn
      apisix:
        adminKey: esthesis-admin
  dashboard:
    enabled: true
    config:
      conf:
        etcd:
          endpoints:
            - esthesis-core-etcd:2379
      authentication:
        secret: esthesis
        users:
          - username: *abc
            password: *def

reloader:
  enabled: true
  reloader:
    watchGlobally: false

keycloak:
  enabled: true
  proxy: edge
  production: true
  auth:
    adminUser: esthesis
    adminPassword: esthesis
  service:
    type: ClusterIP
  ingress:
    enabled: true
    hostname: keycloak.esthesis.local
    tls: true
  postgresql:
    auth:
      postgresPassword: esthesis
      password: esthesis
  readinessProbe:
    timeoutSeconds: 60
  keycloakConfigCli:
    enabled: true
    existingConfigmap: esthesis-core-keycloak-config
    command: ["java", "-jar", "/opt/bitnami/keycloak-config-cli/keycloak-config-cli.jar"]

mongodb:
  auth:
    rootUser: root
    rootPassword: root
    usernames:
      - esthesis
    passwords:
      - esthesis
    databases:
      - esthesis
    replicaSetKey: esthesis
  arbiter:
    enabled: false
  serviceAccount:
    create: true
  rbac:
    create: true
#  initdbScriptsConfigMap:
  readinessProbe:
    timeoutSeconds: 30
